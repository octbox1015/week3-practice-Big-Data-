# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SlEqUCvNBINOyhEm8Z8JcZOo3DKXcJYJ
"""

import random
import numpy as np
import matplotlib.pyplot as plt
from colorsys import hsv_to_rgb

# 1Ô∏è‚É£ Palette generator by style
def generate_palette(style="Minimal", n_colors=6):
    """Generate pastel or vivid color palettes depending on the selected style."""
    base_hue = random.random()  # Generate a different base hue each time
    palette = []
    for _ in range(n_colors):
        # Slightly vary hues around the base color
        h = (base_hue + random.uniform(-0.15, 0.15)) % 1.0

        if style == "Minimal":
            s = random.uniform(0.25, 0.45)
            v = random.uniform(0.85, 0.95)
        elif style == "Vivid":
            s = random.uniform(0.6, 0.9)
            v = random.uniform(0.8, 0.95)
        elif style == "NoiseTouch":
            s = random.uniform(0.4, 0.7)
            v = random.uniform(0.8, 0.95)
        else:
            s, v = 0.5, 0.9

        r, g, b = hsv_to_rgb(h, s, v)
        palette.append((r, g, b))
    return palette


# 2Ô∏è‚É£ Blob generator
def generate_blob(center=(0,0), radius=1.5, wobble=0.2, points=150):
    """Create a set of (x, y) coordinates for an irregular circular blob."""
    angles = np.linspace(0, 2*np.pi, points)
    r = radius * (1 + wobble * (np.random.rand(points) - 0.5) * 2)
    x = center[0] + r * np.cos(angles)
    y = center[1] + r * np.sin(angles)
    return x, y


# 3Ô∏è‚É£ Main drawing function
def draw_poster(
    n_blobs=12,
    blob_radius_range=(3, 5),
    wobble_range=(0.05, 0.2),
    canvas_size=(14,14),
    style="Minimal",
    save_path=None
):
    """Generate a generative abstract poster with colorful layered blobs."""

    # üîπ Random color palette (no fixed seed ‚Üí unique result each run)
    palette = generate_palette(style, n_colors=n_blobs)

    plt.figure(figsize=canvas_size)
    ax = plt.gca()
    ax.set_aspect('equal')
    ax.axis('off')
    ax.set_xlim(-10, 10)
    ax.set_ylim(-10, 10)
    ax.set_facecolor((0.98,0.98,0.97))  # off-white background

    # üîπ Draw multiple blobs
    for i in range(n_blobs):
        radius = random.uniform(*blob_radius_range)
        wobble = random.uniform(*wobble_range)
        if style == "NoiseTouch":
            wobble *= 1.5  # add extra irregularity for this style
        center = (random.uniform(-9, 9), random.uniform(-9, 9))
        x, y = generate_blob(center, radius, wobble)
        ax.fill(
            x, y,
            color=palette[i % len(palette)],
            alpha=random.uniform(0.25, 0.55)
        )

    # üîπ Add credits in the top-right corner
    plt.text(0.95, 0.95, "Made by He Pengwei", fontsize=12,
             ha='right', va='top', transform=ax.transAxes)
    plt.text(0.95, 0.91, "Arts & Advanced Big Data Week3", fontsize=12,
             ha='right', va='top', transform=ax.transAxes)

    # üîπ Optional: export high-quality image
    if save_path:
        plt.savefig(save_path, dpi=300, bbox_inches='tight', facecolor=ax.get_facecolor())

    plt.show()


# 4Ô∏è‚É£ Example run
draw_poster(style="Vivid")  # No fixed seed ‚Üí different colors every time you run